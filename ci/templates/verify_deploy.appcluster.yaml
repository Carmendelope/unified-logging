- script: |
    isOk=1
    for (( i=0; i<36; i++ ))
    do
    expected=$(kubectl --kubeconfig ${{ parameters.kubeconfig }} -n ${{ parameters.namespace }} get deployment elastic -o=jsonpath='{.spec.replicas}')
    if [ $? -ne 0 ]; then
      exit 1
    fi
    ready=$(kubectl --kubeconfig ${{ parameters.kubeconfig }} -n ${{ parameters.namespace }} get deployment elastic -o=jsonpath='{.status.readyReplicas}')
    if [ $? -ne 0 ]; then
      exit 1
    fi
    echo "Expected: $expected"      
    echo "Ready: $ready"
    if [ "$expected" == "$ready" ]; then
      isOk=0
      break
    else
      echo "Not ready yet, waiting 10 seconds"
      echo ""
      sleep 10
    fi
    done
    exit $isOk
  displayName: Verify elastic deployment is ready
  
- script: |
    isOk=1
    for (( i=0; i<36; i++ ))
    do
    expected=$(kubectl --kubeconfig ${{ parameters.kubeconfig }} -n ${{ parameters.namespace }} get deployment unified-logging-slave -o=jsonpath='{.spec.replicas}')
    if [ $? -ne 0 ]; then
      exit 1
    fi
    ready=$(kubectl --kubeconfig ${{ parameters.kubeconfig }} -n ${{ parameters.namespace }} get deployment unified-logging-slave -o=jsonpath='{.status.readyReplicas}')
    if [ $? -ne 0 ]; then
      exit 1
    fi
    echo "Expected: $expected"      
    echo "Ready: $ready"
    if [ "$expected" == "$ready" ]; then
      isOk=0
      break
    else
      echo "Not ready yet, waiting 10 seconds"
      echo ""
      sleep 10
    fi
    done
    exit $isOk
  displayName: Verify unified-logging-slave deployment is ready

- script: |
    isOk=1
    for (( i=0; i<36; i++ ))
    do
    expected=$(kubectl --kubeconfig ${{ parameters.kubeconfig }} -n ${{ parameters.namespace }} get daemonset filebeat -o=jsonpath='{.spec.replicas}')
    if [ $? -ne 0 ]; then
      exit 1
    fi
    ready=$(kubectl --kubeconfig ${{ parameters.kubeconfig }} -n ${{ parameters.namespace }} get daemonset filebeat -o=jsonpath='{.status.readyReplicas}')
    if [ $? -ne 0 ]; then
      exit 1
    fi
    echo "Expected: $expected"      
    echo "Ready: $ready"
    if [ "$expected" == "$ready" ]; then
      isOk=0
      break
    else
      echo "Not ready yet, waiting 10 seconds"
      echo ""
      sleep 10
    fi
    done
    exit $isOk
  displayName: Verify filebeat deamonset is ready
